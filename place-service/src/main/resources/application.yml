server:
  port: 8083

spring:
  application:
    name: place-service
  data:
    mongodb:
      # Local dev default (can be overridden with env SPRING_DATA_MONGODB_URI)
      uri: ${SPRING_DATA_MONGODB_URI:mongodb://localhost:27017/placesdb}

# JWT used by your resource-server/JwtDecoder (same secret/issuer as auth-service)
jwt:
  issuer: easemybooking-auth
  #secret: ${JWT_SECRET}

# Let it register by default in local too (can be overridden with env)
eureka:
  client:
    enabled: true
    serviceUrl:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:8761/eureka}

spring.cloud.config.enabled: false

management:
  endpoints:
    web:
      exposure:
        include: health,info,mappings

logging:
  level:
    com.easemybooking.places: DEBUG

app:
  security:
    # true for local (no token), override to false in docker
    disabled: ${SECURITY_DISABLED:true}

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html

---
spring:
  config:
    activate:
      on-profile: docker
  data:
    mongodb:
      # Fallback host name must match compose service: place-db
      uri: ${SPRING_DATA_MONGODB_URI:mongodb://place-db:27017/placesdb}

eureka:
  client:
    # Eureka server host name must match compose service: discovery-service
    serviceUrl:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://discovery-service:8761/eureka}

app:
  security:
    disabled: false
